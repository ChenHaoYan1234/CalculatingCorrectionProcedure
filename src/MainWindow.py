# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'E:\Project\calculating-correction-procedure/ui/MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os
import sys
from PyQt5 import QtCore, QtGui, QtWidgets

import MainWindow_rc
#import time
import Tools
import ImageData


class Ui_MainWindow(QtWidgets.QMainWindow):
    _VERSION = "1.1.0 beta 12"

    def setupUi(self, MainWindow: QtWidgets.QMainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 500)
        self.setFixedSize(self.width(), self.height())
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Main = QtWidgets.QFrame(self.centralwidget)
        self.Main.setGeometry(QtCore.QRect(0, 0, 600, 500))
        self.Main.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Main.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Main.setObjectName("Main")
        self.Author = QtWidgets.QLabel(self.Main)
        self.Author.setGeometry(QtCore.QRect(10, 480, 100, 10))
        self.Author.setObjectName("Author")
        self.Version = QtWidgets.QLabel(self.Main)
        self.Version.setGeometry(QtCore.QRect(10, 460, 100, 10))
        self.Version.setObjectName("Version")
        self.Title = QtWidgets.QLabel(self.Main)
        self.Title.setGeometry(QtCore.QRect(160, 60, 280, 60))
        font = QtGui.QFont()
        font.setPointSize(34)
        self.Title.setFont(font)
        self.Title.setObjectName("Title")
        self.OpenImage = QtWidgets.QPushButton(self.Main)
        self.OpenImage.setGeometry(QtCore.QRect(150, 350, 100, 40))
        self.OpenImage.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.OpenImage.setObjectName("OpenImage")
        self.OpenImage.clicked.connect(self.openPhotoEvent)
        self.Exit = QtWidgets.QPushButton(self.Main)
        self.Exit.setGeometry(QtCore.QRect(350, 350, 100, 40))
        self.Exit.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.Exit.setObjectName("Exit")
        self.Exit.clicked.connect(QtCore.QCoreApplication.instance().quit)
        self.label = QtWidgets.QLabel(self.Main)
        self.label.setGeometry(QtCore.QRect(100, 120, 400, 200))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.Wait = QtWidgets.QFrame(self.centralwidget)
        self.Wait.setGeometry(QtCore.QRect(0, 0, 600, 500))
        self.Wait.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Wait.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Wait.setObjectName("Wait")
        self.WaitText = QtWidgets.QLabel(self.Wait)
        self.WaitText.setGeometry(QtCore.QRect(300, 200, 290, 100))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.WaitText.setFont(font)
        self.WaitText.setObjectName("WaitText")
        self.WaitIcon = QtWidgets.QLabel(self.Wait)
        self.WaitIcon.setGeometry(QtCore.QRect(100, 150, 200, 200))
        self.WaitIcon.setText("")
        self.WaitGif = QtGui.QMovie(":/Image/loading.gif")
        self.WaitIcon.setMovie(self.WaitGif)
        self.WaitGif.start()
        self.WaitIcon.setObjectName("WaitIcon")
        self.bg_1 = QtGui.QPixmap(":/Image/background.jpg")
        self.bg_2 = QtGui.QPixmap("")
        self.Background = QtWidgets.QLabel(self.Main)
        self.Background.setGeometry(QtCore.QRect(0, 0, 600, 500))
        self.Background.setText("")
        self.Background.setPixmap(self.bg_1)
        self.Background.setScaledContents(True)
        self.Background.setObjectName("Background")
        self.Background.raise_()
        self.Author.raise_()
        self.Version.raise_()
        self.Title.raise_()
        self.OpenImage.raise_()
        self.Exit.raise_()
        self.label.raise_()
        self.CleanBackground = QtWidgets.QPushButton(self.Main)
        self.CleanBackground.setGeometry(QtCore.QRect(520, 480, 80, 20))
        self.CleanBackground.setStyleSheet(
            "background-color:rgb(174, 196, 219)")
        self.CleanBackground.setObjectName("CleanBackground")
        self.CleanBackground.clicked.connect(self.cleanBackground)
        MainWindow.setCentralWidget(self.centralwidget)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.initClient()
        self.showMain()
        self.db = ImageData.ImageData(
            os.path.dirname(os.path.realpath(sys.argv[0]))+"\\image.db")

    def closeEvent(self, a0: QtGui.QCloseEvent) -> None:
        self.db.close()
        a0.accept()

    def showMain(self):
        self.Main.setVisible(True)
        self.Wait.setVisible(False)

    def showWait(self):
        self.Main.setVisible(False)
        self.Wait.setVisible(True)

    def openPhotoEvent(self):
        self.showWait()
        mode = Tools.getMode(self)
        path = Tools.getPath(mode, self)
        if not path:
            self.showMain()
            return 0
        if mode == 0:
            temp = Tools.getPhoto(path)
            if temp:
                self.base64_photo = temp
                del temp
            else:
                del temp
                self.showMain()
                return 0
            self.access_token = Tools.getAccessToken(
                self.client_id, self.client_secret, self)
            # time.sleep(10)
            if self.access_token == False:
                self.showMain()
                return 0
            self.result = Tools.getDistinguishResult(
                self.base64_photo, self.access_token, self, self.db)
            del self.base64_photo, self.access_token
            if self.result == False:
                self.showMain()
                return 0 
            self.result = Tools.resultParser(self.result, self)
            if self.result == False:
                self.showMain()
                return 0
            Tools.saveResult(self.result, mode, self)
            self.showMain()
        else:
            path = Tools.getPhotoFromPath(path,self)
            self.showMain()

    def cleanBackground(self):
        self.CleanBackground.setText(
            QtCore.QCoreApplication.translate("MainWindow", "恢复背景图片"))
        self.CleanBackground.clicked.connect(self.resetBackground)
        self.CleanBackground.setStyleSheet("background-color:rgb(255,255,255)")
        self.Background.setPixmap(self.bg_2)

    def resetBackground(self):
        self.CleanBackground.setText(
            QtCore.QCoreApplication.translate("MainWindow", "清除背景图片"))
        self.CleanBackground.clicked.connect(self.cleanBackground)
        self.CleanBackground.setStyleSheet(
            "background-color:rgb(174, 196, 219)")
        self.Background.setPixmap(self.bg_1)

    def initClient(self):
        self.client_id = "mvWgpUChDGa0ba9XyNgV2k9G"
        self.client_secret = "xyHmCRUO6lCtOQBjMaWsq6KCFgkCK6CZ"

    def retranslateUi(self, MainWindow: QtWidgets.QMainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "口算批改程序"))
        self.Author.setText(_translate("MainWindow", "作者:ChenHaoYan"))
        self.Version.setText(_translate("MainWindow", self._VERSION))
        self.Title.setText(_translate("MainWindow", "口算批改程序"))
        self.OpenImage.setText(_translate("MainWindow", "打开图片"))
        self.Exit.setText(_translate("MainWindow", "退出"))
        self.label.setText(_translate("MainWindow", "请点击开始识别按钮以开始识别。"))
        self.CleanBackground.setText(_translate("MainWindow", "清除背景图片"))
        self.WaitText.setText(_translate("MainWindow", "正在识别中,请等一下。"))
